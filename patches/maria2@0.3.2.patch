diff --git a/dist/chunks/node.mjs b/dist/chunks/node.mjs
index 27841a96dda5a8aa0aa4e56e9f06e525be612fab..5b177be663dad8fa10504ecce7672001f7425566 100644
--- a/dist/chunks/node.mjs
+++ b/dist/chunks/node.mjs
@@ -1,5 +1,3 @@
-import { d as decodeMessageData } from '../shared/maria2.3df4111b.mjs';
-
 const randomUUID = await (async () => {
   const nodeCrypto = await import('node:crypto');
   if (nodeCrypto?.randomUUID != null)
@@ -19,7 +17,8 @@ const randomUUID = await (async () => {
           "content-length": Buffer.byteLength(json)
         }
       },
-      (res) => {
+      async (res) => {
+        const { d: decodeMessageData } = await import('../shared/maria2.3df4111b.mjs');
         res.setEncoding("utf8");
         const chunks = [];
         res.on("data", (chunk) => chunks.push(chunk)), res.on("end", () => onResolve(decodeMessageData(chunks)));
diff --git a/dist/index.d.ts b/dist/index.d.ts
index 406f30d78aef8c84f3960336052aebca39cb3b4e..5ac87d3352f431915152ee9ae62f519684804ff2 100644
--- a/dist/index.d.ts
+++ b/dist/index.d.ts
@@ -101,7 +101,7 @@ type Aria2SystemMulticallParams = [Aria2SystemMulticallParamItem] | Array<Aria2S
 type Aria2SystemMulticallCall = RpcCall<'system.multicall', Aria2SystemMulticallParams>;
 type Aria2SystemMulticallResult = RpcResult<unknown[]>;
 type Aria2SystemMulticallParamsToResult<T extends Aria2SystemMulticallParams> = RpcResult<{
-    [P in keyof T]: NonNullable<Aria2RpcMethodResultMap[T[P]['methodName']]['result']>;
+    [P in keyof T]: NonNullable<[Aria2RpcMethodResultMap[T[P]['methodName']]['result']]>;
 }>;
 
 type Aria2RpcMethodCallMap = Aria2ClientMethodCallMap & Aria2SystemMethodCallMap;
diff --git a/dist/index.mjs b/dist/index.mjs
index 0dd0a9763b8f4e3d48695bd2a1b13dbb8fe01b5a..be7c1922bf730ab0dc10cc411acca9d8f71c4115 100644
--- a/dist/index.mjs
+++ b/dist/index.mjs
@@ -133,7 +133,6 @@ const close = (conn, code, reason) => conn.getSocket().close(code, reason), open
       "aria2.addUri"
     ].reduce((obj, methodName) => (obj[methodName.slice(6)] = (conn, ...args) => conn.sendRequest(
       { method: methodName, secret: !0 },
-      methodName,
       ...args
     ), obj), {}),
     [
